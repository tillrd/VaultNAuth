name: Build and Release Standalone Binaries

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            pyinstaller_os: linux
            pyinstaller_arch: x86_64
            artifact_name: VaultNAuth-linux-x86_64
          - os: macos-latest
            pyinstaller_os: macos
            pyinstaller_arch: universal2
            artifact_name: VaultNAuth-macOS-universal2
          - os: windows-latest
            pyinstaller_os: windows
            pyinstaller_arch: x86_64
            artifact_name: VaultNAuth-windows-x86_64.exe
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyinstaller

      - name: Build executable with PyInstaller
        run: |
          pyinstaller --onefile app.py

      - name: Rename binary for platform
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then mv dist/app ${{ matrix.artifact_name }}; fi
          if [ "${{ matrix.os }}" = "macos-latest" ]; then mv dist/app ${{ matrix.artifact_name }}; fi
          if [ "${{ matrix.os }}" = "windows-latest" ]; then mv dist/app.exe ${{ matrix.artifact_name }}; fi
        shell: bash

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_name }}

  release:
    name: Attach binaries to GitHub Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create release and upload binaries
        uses: softprops/action-gh-release@v2
        with:
          files: ./artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
